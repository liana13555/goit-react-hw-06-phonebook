{"version":3,"sources":["redux/types.js","redux/reducer.js","redux/store.js","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/actions.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","contacts","id","name","number","initialState","JSON","parse","localStorage","getItem","rootReducer","combineReducers","state","type","payload","setItem","stringify","contact","filter","action","store","createStore","composeWithDevTools","Title","styled","h2","SectionTitle","title","children","FormContact","form","FormButton","button","ContactForm","dispatch","useDispatch","useState","setName","setNumber","useSelector","handleChange","event","currentTarget","value","reset","onSubmit","e","preventDefault","find","toLowerCase","alert","addContact","pattern","required","onChange","Filter","filterContacts","List","ol","ListItem","li","ButtonDelete","ContactList","contactsList","includes","filtersContacts","onDeleteContact","deleteContact","map","onClick","Container","div","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bc6884a.chunk.js","sourcesContent":["export const ADD_CONTACT = 'contacts/AddContact';\nexport const DELETE_CONTACT = 'contactList/DeleteContact';\nexport const FILTER_CONTACT = 'filter/filterContact';\n","import { combineReducers } from 'redux';\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './types';\n\nconst contacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst initialState = JSON.parse(localStorage.getItem('contacts'));\n\nexport const contactsReducer = (state = initialState ?? contacts, {type, payload}) => {\n  switch (type) {\n    case ADD_CONTACT:\n      localStorage.setItem('contacts', JSON.stringify([...state, payload]));\n      return [...state, payload];\n    case DELETE_CONTACT:\n      const contact = state.filter(contact => contact.id !== payload);\n      localStorage.setItem('contacts', JSON.stringify(contact));\n      return contact;\n\n    default:\n      return state;\n  }\n};\n\nexport const filterReducer = (state = '', action) => {\n  switch (action.type) {\n    case FILTER_CONTACT:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducer';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  text-transform: uppercase;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle ({title, children}) {\r\n    return (\r\n        <section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    // children: PropTypes.node.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const FormContact = styled.form`\r\n  max-width: 300px;\r\n  padding: 10px;\r\n\r\n  background-color: #d3dbdb;\r\n  border: 2px solid blue;\r\n  border-radius: 5px;  \r\n  cursor: pointer; \r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  margin-top: 20px;\r\n  padding: 5px;\r\n  \r\n  background-color: #4e4bdd;\r\n  cursor: pointer; \r\n`;\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { FormContact, FormButton } from './ContactForm.styled';\r\n\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(state => state.contacts);\r\n\r\n    const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase()\r\n        )) {\r\n            alert(`${name} is already in contacts.`);\r\n        } else if (contacts.find(\r\n            contact => contact.number === number)) {\r\n            alert(`This number ${number} is already in contacts`);\r\n        } else {\r\n            dispatch(addContact({ name, number }));\r\n        };\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <FormContact onSubmit={handleSubmit}>\r\n            <label>\r\n                Name\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />            \r\n            <label> Number\r\n                <br />\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />\r\n            <FormButton type=\"submit\">\r\n                Add contact\r\n            </FormButton>         \r\n        </FormContact>\r\n    );\r\n};","import { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './types';\n\nexport const addContact = (name, number) => ({\n  type: ADD_CONTACT,\n  payload: \n    name,\n    number,  \n});\n\nexport const deleteContact = id => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\n\nexport const filterContacts = value => ({\n  type: FILTER_CONTACT,\n  payload: value,\n});\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../redux/actions';\r\n\r\nexport default function Filter() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const changeFilter = e => {\r\n        let value = e.currentTarget.value;\r\n        dispatch(filterContacts(value));\r\n  };  \r\n\r\n    return (\r\n        <label>\r\n        Find contacts by name\r\n        <br/>\r\n                <input\r\n                type=\"text\"                \r\n           onChange={changeFilter}\r\n         />\r\n    </label>\r\n    )     \r\n};\r\n   \r\n ","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ol`\r\n  max-width: 300px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\nmargin-bottom: 8px;\r\n \r\n`;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  margin-left: 8px;\r\n\r\n  background-color: #5283ec;\r\n  cursor: pointer; \r\n`;\r\n\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport { List, ListItem, ButtonDelete } from './ContactList.styled';\r\n\r\nconst filtersContacts = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\nexport default function ContactList() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(state => state.contacts);\r\n    const filter = useSelector(state => state.filter);\r\n\r\n    const contactsList = filtersContacts(contacts, filter);\r\n\r\n    const onDeleteContact = id => dispatch(deleteContact(id));    \r\n  \r\n    return (\r\n        <List>\r\n            {contactsList.map(({id, name, number}) => (\r\n                <ListItem key={id}>\r\n                    {name}: {number}\r\n                    <ButtonDelete\r\n                        type=\"button\"\r\n                        onClick={() => onDeleteContact(id)}\r\n                    >\r\n                        Delete\r\n                    </ButtonDelete>                \r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    )\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 300px;\r\n  margin-top: 20px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 50px;\r\n  background-color: #d3dbdb;\r\n  border-radius: 10px;\r\n  border: 1px solid blue\r\n`;","import SectionTitle from '../SectionTitle';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\nimport { Container } from './App.styled';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <SectionTitle title=\"Phonebook\">\r\n        <ContactForm />\r\n      </SectionTitle>\r\n\r\n      <SectionTitle title=\"Contacts\">\r\n        <Filter/>\r\n        <ContactList/>\r\n      </SectionTitle>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}